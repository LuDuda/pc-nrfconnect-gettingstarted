{
  "type": "Recipe",
  "title": "Zephyr SDK for Linux",
  "tool": "linux_update",
  "platforms": "linux",
  "description": "Zephyr's SDK contains all necessary tools\
and cross-compilers needed to build the kernel on all supported\
architectures. Additionally, it includes host tools such as custom QEMU binaries\
and a host compiler for building host tools if necessary. The SDK supports the\
following architectures:\
\
* X86 (Intel Architecture 32 bits)\
* X86 IAMCU ABI (Intel Architecture 32 bits IAMCU ABI)\
* ARM (Advanced RISC Machines)\
* ARC (Argonaut RISC Core)\
* Nios II\
* Xtensa\
* RISC-V\
\
Follow these steps to install the SDK on your Linux host system.",
  "checkables": [
    {
      "type": "Checkable",
      "steps": [
        {
          "type": "Step",
          "platforms": "linux",
          "title": "Download",
          "description": "Download the latest SDK as a self-extracting installation binary:\
\
```\
wget https://github.com/zephyrproject-rtos/meta-zephyr-sdk/releases/download/0.9.3/zephyr-sdk-0.9.3-setup.run\
```\
\
(You can change *0.9.3* to another version if needed; the [Zephyr Downloads](https://www.zephyrproject.org/developers/#downloads) page contains all available SDK releases.)\
          "
        },
        {
          "type": "Step",
          "platforms": "linux",
          "title": "Run the installer",
          "description": "Run the installation binary:\
\
```\
cd <sdk download directory>\
sh zephyr-sdk-0.9.3-setup.run\
```\
\
If this fails, make sure Zephyr's dependencies were installed as described in earlier steps.\
          "
        },
        {
          "type": "Step",
          "platforms": "linux",
          "title": "Follow install instructions",
          "description": "Follow the installation instructions on the screen. The toolchain's default installation location is `/opt/zephyr-sdk/`, but it is recommended to install the SDK under your home directory instead.\
\
To install the SDK in the default location, you need to run the installation binary as root.\
          "
        },
        {
          "type": "Step",
          "platforms": "linux",
          "title": "Set up environment variables",
          "description": "To use the Zephyr SDK, export the following environment variables and use the target location where SDK was installed:\
\
```\
export ZEPHYR_TOOLCHAIN_VARIANT=zephyr\
export ZEPHYR_SDK_INSTALL_DIR=<sdk installation directory>\
```\
\
Note: Some Linux distributions have default `CFLAGS` and `CXXFLAGS` environment variables already set. For all distros, they need to be unset to prevent these settings from interfering with cmake:\
\
```\
unset CFLAGS CXXFLAGS\
```\
\
To use the same toolchain in new sessions in the future, you can set the variables in the file `${HOME}/.zephyrrc`, for example:\
\
```\
    cat <<EOF > ~/.zephyrrc\
    export ZEPHYR_TOOLCHAIN_VARIANT=zephyr\
    export ZEPHYR_SDK_INSTALL_DIR=/opt/zephyr-sdk\
    EOF\
```\
\
Note: Use `<sdk installation directory>` in place of `/opt/zephyr-sdk/` in the above shown example if the SDK installation location is not default.\
\
Note: Some Linux distributions have default `CFLAGS` and `CXXFLAGS` environment variables already set. For all distros, they need to be unset to prevent these settings from interfering with cmake:\
\
```\
    cat <<EOF >> ~/.zephyrrc\
    unset CFLAGS CXXFLAGS\
    EOF\
```\
\
Note: In previous releases of Zephyr, the `ZEPHYR_TOOLCHAIN_VARIANT` variable was called `ZEPHYR_GCC_VARIANT`.\
          "
        }
      ]
    }
  ]
}
